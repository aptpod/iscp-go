// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: extensions/downstream.proto

package iscp2

import (
	bytes "bytes"
	io "io"
	math "math"
	math_bits "math/bits"

	"github.com/aptpod/iscp-go/errors"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = errors.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DownstreamOpenRequestExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamOpenRequestExtensionFields) Reset()         { *m = DownstreamOpenRequestExtensionFields{} }
func (m *DownstreamOpenRequestExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamOpenRequestExtensionFields) ProtoMessage()    {}
func (*DownstreamOpenRequestExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{0}
}
func (m *DownstreamOpenRequestExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamOpenRequestExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamOpenRequestExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamOpenRequestExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamOpenRequestExtensionFields.Merge(m, src)
}
func (m *DownstreamOpenRequestExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamOpenRequestExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamOpenRequestExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamOpenRequestExtensionFields proto.InternalMessageInfo

type DownstreamOpenResponseExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamOpenResponseExtensionFields) Reset()         { *m = DownstreamOpenResponseExtensionFields{} }
func (m *DownstreamOpenResponseExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamOpenResponseExtensionFields) ProtoMessage()    {}
func (*DownstreamOpenResponseExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{1}
}
func (m *DownstreamOpenResponseExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamOpenResponseExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamOpenResponseExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamOpenResponseExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamOpenResponseExtensionFields.Merge(m, src)
}
func (m *DownstreamOpenResponseExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamOpenResponseExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamOpenResponseExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamOpenResponseExtensionFields proto.InternalMessageInfo

type DownstreamResumeRequestExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamResumeRequestExtensionFields) Reset() {
	*m = DownstreamResumeRequestExtensionFields{}
}
func (m *DownstreamResumeRequestExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamResumeRequestExtensionFields) ProtoMessage()    {}
func (*DownstreamResumeRequestExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{2}
}
func (m *DownstreamResumeRequestExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamResumeRequestExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamResumeRequestExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamResumeRequestExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamResumeRequestExtensionFields.Merge(m, src)
}
func (m *DownstreamResumeRequestExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamResumeRequestExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamResumeRequestExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamResumeRequestExtensionFields proto.InternalMessageInfo

type DownstreamResumeResponseExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamResumeResponseExtensionFields) Reset() {
	*m = DownstreamResumeResponseExtensionFields{}
}
func (m *DownstreamResumeResponseExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamResumeResponseExtensionFields) ProtoMessage()    {}
func (*DownstreamResumeResponseExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{3}
}
func (m *DownstreamResumeResponseExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamResumeResponseExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamResumeResponseExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamResumeResponseExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamResumeResponseExtensionFields.Merge(m, src)
}
func (m *DownstreamResumeResponseExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamResumeResponseExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamResumeResponseExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamResumeResponseExtensionFields proto.InternalMessageInfo

type DownstreamCloseRequestExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamCloseRequestExtensionFields) Reset()         { *m = DownstreamCloseRequestExtensionFields{} }
func (m *DownstreamCloseRequestExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamCloseRequestExtensionFields) ProtoMessage()    {}
func (*DownstreamCloseRequestExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{4}
}
func (m *DownstreamCloseRequestExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamCloseRequestExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamCloseRequestExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamCloseRequestExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamCloseRequestExtensionFields.Merge(m, src)
}
func (m *DownstreamCloseRequestExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamCloseRequestExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamCloseRequestExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamCloseRequestExtensionFields proto.InternalMessageInfo

type DownstreamCloseResponseExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamCloseResponseExtensionFields) Reset() {
	*m = DownstreamCloseResponseExtensionFields{}
}
func (m *DownstreamCloseResponseExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamCloseResponseExtensionFields) ProtoMessage()    {}
func (*DownstreamCloseResponseExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{5}
}
func (m *DownstreamCloseResponseExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamCloseResponseExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamCloseResponseExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamCloseResponseExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamCloseResponseExtensionFields.Merge(m, src)
}
func (m *DownstreamCloseResponseExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamCloseResponseExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamCloseResponseExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamCloseResponseExtensionFields proto.InternalMessageInfo

type DownstreamChunkExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamChunkExtensionFields) Reset()         { *m = DownstreamChunkExtensionFields{} }
func (m *DownstreamChunkExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamChunkExtensionFields) ProtoMessage()    {}
func (*DownstreamChunkExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{6}
}
func (m *DownstreamChunkExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamChunkExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamChunkExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamChunkExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamChunkExtensionFields.Merge(m, src)
}
func (m *DownstreamChunkExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamChunkExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamChunkExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamChunkExtensionFields proto.InternalMessageInfo

type DownstreamChunkAckExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamChunkAckExtensionFields) Reset()         { *m = DownstreamChunkAckExtensionFields{} }
func (m *DownstreamChunkAckExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamChunkAckExtensionFields) ProtoMessage()    {}
func (*DownstreamChunkAckExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{7}
}
func (m *DownstreamChunkAckExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamChunkAckExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamChunkAckExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamChunkAckExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamChunkAckExtensionFields.Merge(m, src)
}
func (m *DownstreamChunkAckExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamChunkAckExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamChunkAckExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamChunkAckExtensionFields proto.InternalMessageInfo

type DownstreamChunkAckCompleteExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamChunkAckCompleteExtensionFields) Reset() {
	*m = DownstreamChunkAckCompleteExtensionFields{}
}
func (m *DownstreamChunkAckCompleteExtensionFields) String() string {
	return proto.CompactTextString(m)
}
func (*DownstreamChunkAckCompleteExtensionFields) ProtoMessage() {}
func (*DownstreamChunkAckCompleteExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{8}
}
func (m *DownstreamChunkAckCompleteExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamChunkAckCompleteExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamChunkAckCompleteExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamChunkAckCompleteExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamChunkAckCompleteExtensionFields.Merge(m, src)
}
func (m *DownstreamChunkAckCompleteExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamChunkAckCompleteExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamChunkAckCompleteExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamChunkAckCompleteExtensionFields proto.InternalMessageInfo

type DownstreamMetadataExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamMetadataExtensionFields) Reset()         { *m = DownstreamMetadataExtensionFields{} }
func (m *DownstreamMetadataExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamMetadataExtensionFields) ProtoMessage()    {}
func (*DownstreamMetadataExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{9}
}
func (m *DownstreamMetadataExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamMetadataExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamMetadataExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamMetadataExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamMetadataExtensionFields.Merge(m, src)
}
func (m *DownstreamMetadataExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamMetadataExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamMetadataExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamMetadataExtensionFields proto.InternalMessageInfo

type DownstreamMetadataAckExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamMetadataAckExtensionFields) Reset()         { *m = DownstreamMetadataAckExtensionFields{} }
func (m *DownstreamMetadataAckExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamMetadataAckExtensionFields) ProtoMessage()    {}
func (*DownstreamMetadataAckExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{10}
}
func (m *DownstreamMetadataAckExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamMetadataAckExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamMetadataAckExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamMetadataAckExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamMetadataAckExtensionFields.Merge(m, src)
}
func (m *DownstreamMetadataAckExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamMetadataAckExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamMetadataAckExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamMetadataAckExtensionFields proto.InternalMessageInfo

type DownstreamChunkResultExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamChunkResultExtensionFields) Reset()         { *m = DownstreamChunkResultExtensionFields{} }
func (m *DownstreamChunkResultExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamChunkResultExtensionFields) ProtoMessage()    {}
func (*DownstreamChunkResultExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c0b6336c7b9218, []int{11}
}
func (m *DownstreamChunkResultExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamChunkResultExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamChunkResultExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamChunkResultExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamChunkResultExtensionFields.Merge(m, src)
}
func (m *DownstreamChunkResultExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamChunkResultExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamChunkResultExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamChunkResultExtensionFields proto.InternalMessageInfo

func init() {
	proto.RegisterType((*DownstreamOpenRequestExtensionFields)(nil), "iscp2.DownstreamOpenRequestExtensionFields")
	proto.RegisterType((*DownstreamOpenResponseExtensionFields)(nil), "iscp2.DownstreamOpenResponseExtensionFields")
	proto.RegisterType((*DownstreamResumeRequestExtensionFields)(nil), "iscp2.DownstreamResumeRequestExtensionFields")
	proto.RegisterType((*DownstreamResumeResponseExtensionFields)(nil), "iscp2.DownstreamResumeResponseExtensionFields")
	proto.RegisterType((*DownstreamCloseRequestExtensionFields)(nil), "iscp2.DownstreamCloseRequestExtensionFields")
	proto.RegisterType((*DownstreamCloseResponseExtensionFields)(nil), "iscp2.DownstreamCloseResponseExtensionFields")
	proto.RegisterType((*DownstreamChunkExtensionFields)(nil), "iscp2.DownstreamChunkExtensionFields")
	proto.RegisterType((*DownstreamChunkAckExtensionFields)(nil), "iscp2.DownstreamChunkAckExtensionFields")
	proto.RegisterType((*DownstreamChunkAckCompleteExtensionFields)(nil), "iscp2.DownstreamChunkAckCompleteExtensionFields")
	proto.RegisterType((*DownstreamMetadataExtensionFields)(nil), "iscp2.DownstreamMetadataExtensionFields")
	proto.RegisterType((*DownstreamMetadataAckExtensionFields)(nil), "iscp2.DownstreamMetadataAckExtensionFields")
	proto.RegisterType((*DownstreamChunkResultExtensionFields)(nil), "iscp2.DownstreamChunkResultExtensionFields")
}

func init() { proto.RegisterFile("extensions/downstream.proto", fileDescriptor_54c0b6336c7b9218) }

var fileDescriptor_54c0b6336c7b9218 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xd2, 0x3f, 0x4e, 0xc3, 0x30,
	0x14, 0x06, 0x70, 0x3c, 0xc0, 0xe0, 0x91, 0x11, 0xa4, 0xa7, 0x52, 0xa0, 0xa5, 0x42, 0x34, 0x12,
	0x9c, 0x00, 0x0a, 0x6c, 0x08, 0xa9, 0x37, 0xc8, 0x9f, 0x47, 0x1a, 0x91, 0xf8, 0x99, 0x3e, 0x5b,
	0x70, 0x24, 0x8e, 0xc0, 0xc8, 0xd8, 0x91, 0x23, 0x50, 0x9f, 0x82, 0x11, 0x61, 0x28, 0x10, 0x27,
	0xe9, 0x96, 0xa7, 0xfc, 0xfc, 0x7d, 0xd2, 0xb3, 0xe5, 0x2e, 0x3e, 0x19, 0x54, 0x5c, 0x90, 0xe2,
	0x28, 0xa3, 0x47, 0xc5, 0x66, 0x8e, 0x71, 0x35, 0xd6, 0x73, 0x32, 0xb4, 0xbd, 0x59, 0x70, 0xaa,
	0x4f, 0x77, 0x4e, 0xf2, 0xc2, 0xcc, 0x6c, 0x32, 0x4e, 0xa9, 0x8a, 0x72, 0xca, 0x29, 0xf2, 0x7f,
	0x13, 0x7b, 0xe7, 0x27, 0x3f, 0xf8, 0xaf, 0xef, 0x53, 0xfd, 0x81, 0x3c, 0xb8, 0xfc, 0x4d, 0xba,
	0xd5, 0xa8, 0xa6, 0xf8, 0x60, 0x91, 0xcd, 0xd5, 0xaa, 0xe9, 0xba, 0xc0, 0x32, 0xe3, 0xfe, 0x50,
	0x1e, 0x86, 0x8e, 0x35, 0x29, 0xc6, 0x10, 0x1e, 0xc9, 0xc1, 0x1f, 0x9c, 0x22, 0xdb, 0x0a, 0x3b,
	0x22, 0x47, 0x72, 0xd8, 0x94, 0xed, 0xa1, 0xb5, 0xf6, 0x49, 0x49, 0xdc, 0x95, 0x59, 0x6b, 0xff,
	0x81, 0xed, 0x91, 0x3d, 0x09, 0xff, 0xe4, 0xcc, 0xaa, 0xfb, 0x50, 0xec, 0xcb, 0xbd, 0x40, 0x9c,
	0xa7, 0x0d, 0x74, 0x2c, 0x47, 0x4d, 0x34, 0xa1, 0x4a, 0x97, 0x68, 0x70, 0x6d, 0xe2, 0x0d, 0x9a,
	0x38, 0x8b, 0x4d, 0x1c, 0xa2, 0xda, 0x8d, 0xac, 0x50, 0x4b, 0x73, 0xcd, 0xf9, 0xe6, 0xaf, 0x1d,
	0x96, 0xe1, 0x4a, 0x2e, 0x7a, 0x8b, 0x25, 0x6c, 0x7c, 0x2c, 0x41, 0x3c, 0x3b, 0x10, 0x2f, 0x0e,
	0xc4, 0xab, 0x03, 0xb1, 0x70, 0x20, 0xde, 0x1c, 0x88, 0x77, 0x07, 0x22, 0xd9, 0xf2, 0x4f, 0xe1,
	0xec, 0x33, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x17, 0xbe, 0x40, 0x5f, 0x02, 0x00, 0x00,
}

func (this *DownstreamOpenRequestExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamOpenRequestExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamOpenRequestExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DownstreamOpenResponseExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamOpenResponseExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamOpenResponseExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DownstreamResumeRequestExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamResumeRequestExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamResumeRequestExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DownstreamResumeResponseExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamResumeResponseExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamResumeResponseExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DownstreamCloseRequestExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamCloseRequestExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamCloseRequestExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DownstreamCloseResponseExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamCloseResponseExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamCloseResponseExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DownstreamChunkExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamChunkExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamChunkExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DownstreamChunkAckExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamChunkAckExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamChunkAckExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DownstreamChunkAckCompleteExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamChunkAckCompleteExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamChunkAckCompleteExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DownstreamMetadataExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamMetadataExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamMetadataExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DownstreamMetadataAckExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamMetadataAckExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamMetadataAckExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DownstreamChunkResultExtensionFields) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DownstreamChunkResultExtensionFields)
	if !ok {
		that2, ok := that.(DownstreamChunkResultExtensionFields)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (m *DownstreamOpenRequestExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamOpenRequestExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamOpenRequestExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamOpenResponseExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamOpenResponseExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamOpenResponseExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamResumeRequestExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamResumeRequestExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamResumeRequestExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamResumeResponseExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamResumeResponseExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamResumeResponseExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamCloseRequestExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamCloseRequestExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamCloseRequestExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamCloseResponseExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamCloseResponseExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamCloseResponseExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamChunkExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamChunkExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamChunkExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamChunkAckExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamChunkAckExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamChunkAckExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamChunkAckCompleteExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamChunkAckCompleteExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamChunkAckCompleteExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamMetadataExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamMetadataExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamMetadataExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamMetadataAckExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamMetadataAckExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamMetadataAckExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamChunkResultExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamChunkResultExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamChunkResultExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintDownstream(dAtA []byte, offset int, v uint64) int {
	offset -= sovDownstream(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedDownstreamOpenRequestExtensionFields(r randyDownstream, easy bool) *DownstreamOpenRequestExtensionFields {
	this := &DownstreamOpenRequestExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

func NewPopulatedDownstreamOpenResponseExtensionFields(r randyDownstream, easy bool) *DownstreamOpenResponseExtensionFields {
	this := &DownstreamOpenResponseExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

func NewPopulatedDownstreamResumeRequestExtensionFields(r randyDownstream, easy bool) *DownstreamResumeRequestExtensionFields {
	this := &DownstreamResumeRequestExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

func NewPopulatedDownstreamResumeResponseExtensionFields(r randyDownstream, easy bool) *DownstreamResumeResponseExtensionFields {
	this := &DownstreamResumeResponseExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

func NewPopulatedDownstreamCloseRequestExtensionFields(r randyDownstream, easy bool) *DownstreamCloseRequestExtensionFields {
	this := &DownstreamCloseRequestExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

func NewPopulatedDownstreamCloseResponseExtensionFields(r randyDownstream, easy bool) *DownstreamCloseResponseExtensionFields {
	this := &DownstreamCloseResponseExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

func NewPopulatedDownstreamChunkExtensionFields(r randyDownstream, easy bool) *DownstreamChunkExtensionFields {
	this := &DownstreamChunkExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

func NewPopulatedDownstreamChunkAckExtensionFields(r randyDownstream, easy bool) *DownstreamChunkAckExtensionFields {
	this := &DownstreamChunkAckExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

func NewPopulatedDownstreamChunkAckCompleteExtensionFields(r randyDownstream, easy bool) *DownstreamChunkAckCompleteExtensionFields {
	this := &DownstreamChunkAckCompleteExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

func NewPopulatedDownstreamMetadataExtensionFields(r randyDownstream, easy bool) *DownstreamMetadataExtensionFields {
	this := &DownstreamMetadataExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

func NewPopulatedDownstreamMetadataAckExtensionFields(r randyDownstream, easy bool) *DownstreamMetadataAckExtensionFields {
	this := &DownstreamMetadataAckExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

func NewPopulatedDownstreamChunkResultExtensionFields(r randyDownstream, easy bool) *DownstreamChunkResultExtensionFields {
	this := &DownstreamChunkResultExtensionFields{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedDownstream(r, 1)
	}
	return this
}

type randyDownstream interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneDownstream(r randyDownstream) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringDownstream(r randyDownstream) string {
	v1 := r.Intn(100)
	tmps := make([]rune, v1)
	for i := 0; i < v1; i++ {
		tmps[i] = randUTF8RuneDownstream(r)
	}
	return string(tmps)
}
func randUnrecognizedDownstream(r randyDownstream, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldDownstream(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldDownstream(dAtA []byte, r randyDownstream, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateDownstream(dAtA, uint64(key))
		v2 := r.Int63()
		if r.Intn(2) == 0 {
			v2 *= -1
		}
		dAtA = encodeVarintPopulateDownstream(dAtA, uint64(v2))
	case 1:
		dAtA = encodeVarintPopulateDownstream(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateDownstream(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateDownstream(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateDownstream(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateDownstream(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *DownstreamOpenRequestExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamOpenResponseExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamResumeRequestExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamResumeResponseExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamCloseRequestExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamCloseResponseExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamChunkExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamChunkAckExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamChunkAckCompleteExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamMetadataExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamMetadataAckExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamChunkResultExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDownstream(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDownstream(x uint64) (n int) {
	return sovDownstream(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DownstreamOpenRequestExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamOpenRequestExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamOpenRequestExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamOpenResponseExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamOpenResponseExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamOpenResponseExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamResumeRequestExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamResumeRequestExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamResumeRequestExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamResumeResponseExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamResumeResponseExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamResumeResponseExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamCloseRequestExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamCloseRequestExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamCloseRequestExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamCloseResponseExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamCloseResponseExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamCloseResponseExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamChunkExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamChunkExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamChunkExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamChunkAckExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamChunkAckExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamChunkAckExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamChunkAckCompleteExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamChunkAckCompleteExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamChunkAckCompleteExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamMetadataExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamMetadataExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamMetadataExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamMetadataAckExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamMetadataAckExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamMetadataAckExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamChunkResultExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return errors.Errorf("proto: DownstreamChunkResultExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return errors.Errorf("proto: DownstreamChunkResultExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDownstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDownstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDownstream(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDownstream
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDownstream
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDownstream
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDownstream
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDownstream
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, errors.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDownstream
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDownstream        = errors.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDownstream          = errors.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDownstream = errors.Errorf("proto: unexpected end of group")
)
